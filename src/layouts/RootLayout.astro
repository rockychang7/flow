---
import "@fontsource-variable/roboto-mono";
import "@/styles/globals.css";
import BackToTop from "@/components/common/back-to-top.tsx";
import {ViewTransitions} from 'astro:transitions';
const {title} = Astro.props;
---


<html lang="en">
<head>
    <meta charset="utf-8"/>
    <link rel="icon" type="image/svg+xml" href="/favicon.ico"/>
    <meta name="viewport" content="width=device-width"/>
    <meta name="generator" content={Astro.generator}/>
    <title>{title}</title>
    <ViewTransitions/>
    <script is:inline transition:persist>
        const getThemePreference = () => {
            if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
                return localStorage.getItem("theme");
            }
            return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
        };
        const isDark = getThemePreference() === "dark";
        document.documentElement.classList[isDark ? "add" : "remove"]("dark");

        if (typeof localStorage !== "undefined") {
            const observer = new MutationObserver(() => {
                const isDark = document.documentElement.classList.contains("dark");
                localStorage.setItem("theme", isDark ? "dark" : "light");
            });
            observer.observe(document.documentElement, {attributes: true, attributeFilter: ["class"]});
        }
    </script>

    <!-- 添加页面转换时的主题同步脚本 -->
    <script is:inline>
        document.addEventListener('astro:after-swap', () => {
            // 在页面转换后同步主题
            const theme = localStorage.getItem("theme") ??
                (window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light");
            document.documentElement.classList[theme === "dark" ? "add" : "remove"]("dark");
        });
    </script>
</head>
<body>
<main class="min-h-svh container w-full flex flex-col font-sans p-4 md:px-8 min-w-[400px] max-w-screen-md">
    <slot/>
</main>
<BackToTop client:load/>
<!-- Add this portal container for dialogs -->
<div id="dialog-portal"></div>
</body>
</html>